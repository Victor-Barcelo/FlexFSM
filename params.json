{"name":"Flexfsm","tagline":"State Machine for Unity3D","body":"FlexFSM - A Unity3D Finite State Machine\r\n========================================\r\n\r\nVíctor Barceló - 11/2013\r\n\r\nFinite State Machine based on the implementation found in Mat Buckland’s book \"Programming Game AI by Example\".\r\n\r\nMain differences with the FSM found in the Unity wiki ( http://wiki.unity3d.com/index.php/Finit_State_Machine ):\r\n- Doesn't make use of explicit transitions in the FSM declaration.\r\n- Includes blip states, which can be pushed and reverted.\r\n- Can assign a collection of triggers to states that will execute a predefined method (OnEvent) on the current \r\nstate. This is used to allow outside communication with the current state by addressing the NotifyEvent method of the FSM.\r\n- Allows to define hierarchical FSM's without too much fuss.  \r\n\r\nFurther examples and explanations can be found at http://www.victorbarcelo.net\r\n\r\n \r\n  \r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \r\n  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE \r\n  AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \r\n  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n  \r\n \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}